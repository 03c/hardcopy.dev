{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","siteUrl","previous","next","disqusConfig","url","pathname","identifier","id","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","date","config","placeholder","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","slug","rel","pageQuery"],"mappings":"2FAAA,sIAgFeA,UAvEU,SAAC,GAAwB,IAAD,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,GAAU,UAAAR,EAAKK,KAAKC,oBAAV,eAAwBE,UAAxB,OACRC,EAAmBT,EAAnBS,SAAUC,EAASV,EAATU,KAEdC,EAAe,CACjBC,IAAI,IAAIJ,EAAUP,EAASY,UAC3BC,WAAYZ,EAAKa,GACjBR,MAAOL,EAAKK,OAGd,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKc,YAAYT,MACxBU,YAAaf,EAAKc,YAAYC,aAAef,EAAKgB,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYpB,EAAKc,YAAYT,OAC1C,2BACGL,EAAKc,YAAYO,KADpB,KAC4B,IAC1B,kBAAC,eAAD,CAAcC,OAAQb,EAAcc,YAAa,eAFnD,KAEsE,IACnEvB,EAAKwB,OAAOC,YAAYC,OAG7B,6BACEC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCT,SAAS,gBAEX,6BACA,gCACE,kBAAC,IAAD,QAGJ,yBAAKH,UAAU,iBACb,wBACEa,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG5B,GACC,kBAAC,OAAD,CAAM6B,GAAI7B,EAASiB,OAAOa,KAAMC,IAAI,QAApC,KACK/B,EAASO,YAAYT,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAM4B,GAAI5B,EAAKgB,OAAOa,KAAMC,IAAI,QAC7B9B,EAAKM,YAAYT,MADpB,QAMN,kBAAC,SAAD,CAAQiB,OAAQb,OAQjB,IAAM8B,EAAS","file":"component---src-templates-blog-post-js-67a68b92e57c47f8ce91.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport { Disqus, CommentCount } from 'gatsby-plugin-disqus'\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const siteUrl = data.site.siteMetadata?.siteUrl || `Blog`\n  const { previous, next } = data\n\n  let disqusConfig = {\n    url: `${siteUrl + location.pathname}`,\n    identifier: post.id,\n    title: post.title,\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>\n            {post.frontmatter.date} |{' '}\n            <CommentCount config={disqusConfig} placeholder={'0 Comments'} /> |{' '}\n            {post.fields.readingTime.text}\n          </p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n        <Disqus config={disqusConfig} />\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      fields {\n        readingTime {\n          text\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}